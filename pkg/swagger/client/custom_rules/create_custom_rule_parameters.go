// Code generated by go-swagger; DO NOT EDIT.

package custom_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// NewCreateCustomRuleParams creates a new CreateCustomRuleParams object
// with the default values initialized.
func NewCreateCustomRuleParams() *CreateCustomRuleParams {
	var ()
	return &CreateCustomRuleParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCustomRuleParamsWithTimeout creates a new CreateCustomRuleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateCustomRuleParamsWithTimeout(timeout time.Duration) *CreateCustomRuleParams {
	var ()
	return &CreateCustomRuleParams{

		timeout: timeout,
	}
}

// NewCreateCustomRuleParamsWithContext creates a new CreateCustomRuleParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateCustomRuleParamsWithContext(ctx context.Context) *CreateCustomRuleParams {
	var ()
	return &CreateCustomRuleParams{

		Context: ctx,
	}
}

// NewCreateCustomRuleParamsWithHTTPClient creates a new CreateCustomRuleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateCustomRuleParamsWithHTTPClient(client *http.Client) *CreateCustomRuleParams {
	var ()
	return &CreateCustomRuleParams{
		HTTPClient: client,
	}
}

/*CreateCustomRuleParams contains all the parameters to send to the API endpoint
for the create custom rule operation typically these are written to a http.Request
*/
type CreateCustomRuleParams struct {

	/*Rule
	  Configuration options for the new custom rule.

	*/
	Rule *models.CreateCustomRuleInput

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create custom rule params
func (o *CreateCustomRuleParams) WithTimeout(timeout time.Duration) *CreateCustomRuleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create custom rule params
func (o *CreateCustomRuleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create custom rule params
func (o *CreateCustomRuleParams) WithContext(ctx context.Context) *CreateCustomRuleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create custom rule params
func (o *CreateCustomRuleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create custom rule params
func (o *CreateCustomRuleParams) WithHTTPClient(client *http.Client) *CreateCustomRuleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create custom rule params
func (o *CreateCustomRuleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRule adds the rule to the create custom rule params
func (o *CreateCustomRuleParams) WithRule(rule *models.CreateCustomRuleInput) *CreateCustomRuleParams {
	o.SetRule(rule)
	return o
}

// SetRule adds the rule to the create custom rule params
func (o *CreateCustomRuleParams) SetRule(rule *models.CreateCustomRuleInput) {
	o.Rule = rule
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCustomRuleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Rule != nil {
		if err := r.SetBodyParam(o.Rule); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
