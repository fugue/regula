// Code generated by go-swagger; DO NOT EDIT.

package custom_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// CreateCustomRuleReader is a Reader for the CreateCustomRule structure.
type CreateCustomRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCustomRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateCustomRuleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCustomRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateCustomRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCustomRuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCustomRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateCustomRuleCreated creates a CreateCustomRuleCreated with default headers values
func NewCreateCustomRuleCreated() *CreateCustomRuleCreated {
	return &CreateCustomRuleCreated{}
}

/*CreateCustomRuleCreated handles this case with default header values.

New custom rule details.
*/
type CreateCustomRuleCreated struct {
	Payload *models.CustomRuleWithErrors
}

func (o *CreateCustomRuleCreated) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createCustomRuleCreated  %+v", 201, o.Payload)
}

func (o *CreateCustomRuleCreated) GetPayload() *models.CustomRuleWithErrors {
	return o.Payload
}

func (o *CreateCustomRuleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomRuleWithErrors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRuleBadRequest creates a CreateCustomRuleBadRequest with default headers values
func NewCreateCustomRuleBadRequest() *CreateCustomRuleBadRequest {
	return &CreateCustomRuleBadRequest{}
}

/*CreateCustomRuleBadRequest handles this case with default header values.

BadRequestError
*/
type CreateCustomRuleBadRequest struct {
	Payload *models.BadRequestError
}

func (o *CreateCustomRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createCustomRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCustomRuleBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *CreateCustomRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRuleUnauthorized creates a CreateCustomRuleUnauthorized with default headers values
func NewCreateCustomRuleUnauthorized() *CreateCustomRuleUnauthorized {
	return &CreateCustomRuleUnauthorized{}
}

/*CreateCustomRuleUnauthorized handles this case with default header values.

AuthenticationError
*/
type CreateCustomRuleUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *CreateCustomRuleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createCustomRuleUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateCustomRuleUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *CreateCustomRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRuleForbidden creates a CreateCustomRuleForbidden with default headers values
func NewCreateCustomRuleForbidden() *CreateCustomRuleForbidden {
	return &CreateCustomRuleForbidden{}
}

/*CreateCustomRuleForbidden handles this case with default header values.

AuthorizationError
*/
type CreateCustomRuleForbidden struct {
	Payload *models.AuthorizationError
}

func (o *CreateCustomRuleForbidden) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createCustomRuleForbidden  %+v", 403, o.Payload)
}

func (o *CreateCustomRuleForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *CreateCustomRuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRuleInternalServerError creates a CreateCustomRuleInternalServerError with default headers values
func NewCreateCustomRuleInternalServerError() *CreateCustomRuleInternalServerError {
	return &CreateCustomRuleInternalServerError{}
}

/*CreateCustomRuleInternalServerError handles this case with default header values.

InternalServerError
*/
type CreateCustomRuleInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *CreateCustomRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createCustomRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateCustomRuleInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *CreateCustomRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
