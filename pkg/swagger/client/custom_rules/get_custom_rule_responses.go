// Code generated by go-swagger; DO NOT EDIT.

package custom_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// GetCustomRuleReader is a Reader for the GetCustomRule structure.
type GetCustomRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomRuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCustomRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomRuleOK creates a GetCustomRuleOK with default headers values
func NewGetCustomRuleOK() *GetCustomRuleOK {
	return &GetCustomRuleOK{}
}

/*GetCustomRuleOK handles this case with default header values.

Custom rule details.
*/
type GetCustomRuleOK struct {
	Payload *models.CustomRule
}

func (o *GetCustomRuleOK) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleOK  %+v", 200, o.Payload)
}

func (o *GetCustomRuleOK) GetPayload() *models.CustomRule {
	return o.Payload
}

func (o *GetCustomRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRuleBadRequest creates a GetCustomRuleBadRequest with default headers values
func NewGetCustomRuleBadRequest() *GetCustomRuleBadRequest {
	return &GetCustomRuleBadRequest{}
}

/*GetCustomRuleBadRequest handles this case with default header values.

BadRequestError
*/
type GetCustomRuleBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCustomRuleBadRequest) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomRuleBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCustomRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRuleUnauthorized creates a GetCustomRuleUnauthorized with default headers values
func NewGetCustomRuleUnauthorized() *GetCustomRuleUnauthorized {
	return &GetCustomRuleUnauthorized{}
}

/*GetCustomRuleUnauthorized handles this case with default header values.

AuthenticationError
*/
type GetCustomRuleUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *GetCustomRuleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCustomRuleUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *GetCustomRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRuleForbidden creates a GetCustomRuleForbidden with default headers values
func NewGetCustomRuleForbidden() *GetCustomRuleForbidden {
	return &GetCustomRuleForbidden{}
}

/*GetCustomRuleForbidden handles this case with default header values.

AuthorizationError
*/
type GetCustomRuleForbidden struct {
	Payload *models.AuthorizationError
}

func (o *GetCustomRuleForbidden) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomRuleForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *GetCustomRuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRuleNotFound creates a GetCustomRuleNotFound with default headers values
func NewGetCustomRuleNotFound() *GetCustomRuleNotFound {
	return &GetCustomRuleNotFound{}
}

/*GetCustomRuleNotFound handles this case with default header values.

NotFoundError
*/
type GetCustomRuleNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCustomRuleNotFound) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomRuleNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCustomRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRuleInternalServerError creates a GetCustomRuleInternalServerError with default headers values
func NewGetCustomRuleInternalServerError() *GetCustomRuleInternalServerError {
	return &GetCustomRuleInternalServerError{}
}

/*GetCustomRuleInternalServerError handles this case with default header values.

InternalServerError
*/
type GetCustomRuleInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCustomRuleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /rules/{rule_id}][%d] getCustomRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCustomRuleInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetCustomRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
