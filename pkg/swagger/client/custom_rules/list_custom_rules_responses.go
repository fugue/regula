// Code generated by go-swagger; DO NOT EDIT.

package custom_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// ListCustomRulesReader is a Reader for the ListCustomRules structure.
type ListCustomRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCustomRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCustomRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCustomRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListCustomRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCustomRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListCustomRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListCustomRulesOK creates a ListCustomRulesOK with default headers values
func NewListCustomRulesOK() *ListCustomRulesOK {
	return &ListCustomRulesOK{}
}

/*ListCustomRulesOK handles this case with default header values.

List of custom rules.
*/
type ListCustomRulesOK struct {
	Payload *models.CustomRules
}

func (o *ListCustomRulesOK) Error() string {
	return fmt.Sprintf("[GET /rules][%d] listCustomRulesOK  %+v", 200, o.Payload)
}

func (o *ListCustomRulesOK) GetPayload() *models.CustomRules {
	return o.Payload
}

func (o *ListCustomRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomRules)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomRulesBadRequest creates a ListCustomRulesBadRequest with default headers values
func NewListCustomRulesBadRequest() *ListCustomRulesBadRequest {
	return &ListCustomRulesBadRequest{}
}

/*ListCustomRulesBadRequest handles this case with default header values.

BadRequestError
*/
type ListCustomRulesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *ListCustomRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /rules][%d] listCustomRulesBadRequest  %+v", 400, o.Payload)
}

func (o *ListCustomRulesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *ListCustomRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomRulesUnauthorized creates a ListCustomRulesUnauthorized with default headers values
func NewListCustomRulesUnauthorized() *ListCustomRulesUnauthorized {
	return &ListCustomRulesUnauthorized{}
}

/*ListCustomRulesUnauthorized handles this case with default header values.

AuthenticationError
*/
type ListCustomRulesUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *ListCustomRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /rules][%d] listCustomRulesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListCustomRulesUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *ListCustomRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomRulesForbidden creates a ListCustomRulesForbidden with default headers values
func NewListCustomRulesForbidden() *ListCustomRulesForbidden {
	return &ListCustomRulesForbidden{}
}

/*ListCustomRulesForbidden handles this case with default header values.

AuthorizationError
*/
type ListCustomRulesForbidden struct {
	Payload *models.AuthorizationError
}

func (o *ListCustomRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /rules][%d] listCustomRulesForbidden  %+v", 403, o.Payload)
}

func (o *ListCustomRulesForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *ListCustomRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomRulesInternalServerError creates a ListCustomRulesInternalServerError with default headers values
func NewListCustomRulesInternalServerError() *ListCustomRulesInternalServerError {
	return &ListCustomRulesInternalServerError{}
}

/*ListCustomRulesInternalServerError handles this case with default header values.

InternalServerError
*/
type ListCustomRulesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *ListCustomRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /rules][%d] listCustomRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListCustomRulesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *ListCustomRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
