// Code generated by go-swagger; DO NOT EDIT.

package custom_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// TestCustomRuleInputReader is a Reader for the TestCustomRuleInput structure.
type TestCustomRuleInputReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestCustomRuleInputReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestCustomRuleInputOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTestCustomRuleInputBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTestCustomRuleInputUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTestCustomRuleInputForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTestCustomRuleInputInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestCustomRuleInputOK creates a TestCustomRuleInputOK with default headers values
func NewTestCustomRuleInputOK() *TestCustomRuleInputOK {
	return &TestCustomRuleInputOK{}
}

/*TestCustomRuleInputOK handles this case with default header values.

Input used for the custom rule.
*/
type TestCustomRuleInputOK struct {
	Payload *models.TestCustomRuleInputScan
}

func (o *TestCustomRuleInputOK) Error() string {
	return fmt.Sprintf("[GET /rules/test/input][%d] testCustomRuleInputOK  %+v", 200, o.Payload)
}

func (o *TestCustomRuleInputOK) GetPayload() *models.TestCustomRuleInputScan {
	return o.Payload
}

func (o *TestCustomRuleInputOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestCustomRuleInputScan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestCustomRuleInputBadRequest creates a TestCustomRuleInputBadRequest with default headers values
func NewTestCustomRuleInputBadRequest() *TestCustomRuleInputBadRequest {
	return &TestCustomRuleInputBadRequest{}
}

/*TestCustomRuleInputBadRequest handles this case with default header values.

BadRequestError
*/
type TestCustomRuleInputBadRequest struct {
	Payload *models.BadRequestError
}

func (o *TestCustomRuleInputBadRequest) Error() string {
	return fmt.Sprintf("[GET /rules/test/input][%d] testCustomRuleInputBadRequest  %+v", 400, o.Payload)
}

func (o *TestCustomRuleInputBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *TestCustomRuleInputBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestCustomRuleInputUnauthorized creates a TestCustomRuleInputUnauthorized with default headers values
func NewTestCustomRuleInputUnauthorized() *TestCustomRuleInputUnauthorized {
	return &TestCustomRuleInputUnauthorized{}
}

/*TestCustomRuleInputUnauthorized handles this case with default header values.

AuthenticationError
*/
type TestCustomRuleInputUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *TestCustomRuleInputUnauthorized) Error() string {
	return fmt.Sprintf("[GET /rules/test/input][%d] testCustomRuleInputUnauthorized  %+v", 401, o.Payload)
}

func (o *TestCustomRuleInputUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *TestCustomRuleInputUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestCustomRuleInputForbidden creates a TestCustomRuleInputForbidden with default headers values
func NewTestCustomRuleInputForbidden() *TestCustomRuleInputForbidden {
	return &TestCustomRuleInputForbidden{}
}

/*TestCustomRuleInputForbidden handles this case with default header values.

AuthorizationError
*/
type TestCustomRuleInputForbidden struct {
	Payload *models.AuthorizationError
}

func (o *TestCustomRuleInputForbidden) Error() string {
	return fmt.Sprintf("[GET /rules/test/input][%d] testCustomRuleInputForbidden  %+v", 403, o.Payload)
}

func (o *TestCustomRuleInputForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *TestCustomRuleInputForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestCustomRuleInputInternalServerError creates a TestCustomRuleInputInternalServerError with default headers values
func NewTestCustomRuleInputInternalServerError() *TestCustomRuleInputInternalServerError {
	return &TestCustomRuleInputInternalServerError{}
}

/*TestCustomRuleInputInternalServerError handles this case with default header values.

InternalServerError
*/
type TestCustomRuleInputInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *TestCustomRuleInputInternalServerError) Error() string {
	return fmt.Sprintf("[GET /rules/test/input][%d] testCustomRuleInputInternalServerError  %+v", 500, o.Payload)
}

func (o *TestCustomRuleInputInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *TestCustomRuleInputInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
