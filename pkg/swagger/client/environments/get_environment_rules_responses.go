// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/v2/pkg/swagger/models"
)

// GetEnvironmentRulesReader is a Reader for the GetEnvironmentRules structure.
type GetEnvironmentRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEnvironmentRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEnvironmentRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentRulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEnvironmentRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEnvironmentRulesOK creates a GetEnvironmentRulesOK with default headers values
func NewGetEnvironmentRulesOK() *GetEnvironmentRulesOK {
	return &GetEnvironmentRulesOK{}
}

/*GetEnvironmentRulesOK handles this case with default header values.

Environment rules.
*/
type GetEnvironmentRulesOK struct {
	Payload *models.EnvironmentRules
}

func (o *GetEnvironmentRulesOK) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesOK  %+v", 200, o.Payload)
}

func (o *GetEnvironmentRulesOK) GetPayload() *models.EnvironmentRules {
	return o.Payload
}

func (o *GetEnvironmentRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentRules)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentRulesBadRequest creates a GetEnvironmentRulesBadRequest with default headers values
func NewGetEnvironmentRulesBadRequest() *GetEnvironmentRulesBadRequest {
	return &GetEnvironmentRulesBadRequest{}
}

/*GetEnvironmentRulesBadRequest handles this case with default header values.

BadRequestError
*/
type GetEnvironmentRulesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetEnvironmentRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetEnvironmentRulesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetEnvironmentRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentRulesUnauthorized creates a GetEnvironmentRulesUnauthorized with default headers values
func NewGetEnvironmentRulesUnauthorized() *GetEnvironmentRulesUnauthorized {
	return &GetEnvironmentRulesUnauthorized{}
}

/*GetEnvironmentRulesUnauthorized handles this case with default header values.

AuthenticationError
*/
type GetEnvironmentRulesUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *GetEnvironmentRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEnvironmentRulesUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *GetEnvironmentRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentRulesForbidden creates a GetEnvironmentRulesForbidden with default headers values
func NewGetEnvironmentRulesForbidden() *GetEnvironmentRulesForbidden {
	return &GetEnvironmentRulesForbidden{}
}

/*GetEnvironmentRulesForbidden handles this case with default header values.

AuthorizationError
*/
type GetEnvironmentRulesForbidden struct {
	Payload *models.AuthorizationError
}

func (o *GetEnvironmentRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesForbidden  %+v", 403, o.Payload)
}

func (o *GetEnvironmentRulesForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *GetEnvironmentRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentRulesNotFound creates a GetEnvironmentRulesNotFound with default headers values
func NewGetEnvironmentRulesNotFound() *GetEnvironmentRulesNotFound {
	return &GetEnvironmentRulesNotFound{}
}

/*GetEnvironmentRulesNotFound handles this case with default header values.

NotFoundError
*/
type GetEnvironmentRulesNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetEnvironmentRulesNotFound) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesNotFound  %+v", 404, o.Payload)
}

func (o *GetEnvironmentRulesNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetEnvironmentRulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentRulesInternalServerError creates a GetEnvironmentRulesInternalServerError with default headers values
func NewGetEnvironmentRulesInternalServerError() *GetEnvironmentRulesInternalServerError {
	return &GetEnvironmentRulesInternalServerError{}
}

/*GetEnvironmentRulesInternalServerError handles this case with default header values.

InternalServerError
*/
type GetEnvironmentRulesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetEnvironmentRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /environments/{environment_id}/rules][%d] getEnvironmentRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEnvironmentRulesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetEnvironmentRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
