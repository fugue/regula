// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListEnvironmentsParams creates a new ListEnvironmentsParams object
// with the default values initialized.
func NewListEnvironmentsParams() *ListEnvironmentsParams {
	var (
		maxItemsDefault       = int64(100)
		offsetDefault         = int64(0)
		orderByDefault        = string("created_at")
		orderDirectionDefault = string("desc")
	)
	return &ListEnvironmentsParams{
		MaxItems:       &maxItemsDefault,
		Offset:         &offsetDefault,
		OrderBy:        &orderByDefault,
		OrderDirection: &orderDirectionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewListEnvironmentsParamsWithTimeout creates a new ListEnvironmentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListEnvironmentsParamsWithTimeout(timeout time.Duration) *ListEnvironmentsParams {
	var (
		maxItemsDefault       = int64(100)
		offsetDefault         = int64(0)
		orderByDefault        = string("created_at")
		orderDirectionDefault = string("desc")
	)
	return &ListEnvironmentsParams{
		MaxItems:       &maxItemsDefault,
		Offset:         &offsetDefault,
		OrderBy:        &orderByDefault,
		OrderDirection: &orderDirectionDefault,

		timeout: timeout,
	}
}

// NewListEnvironmentsParamsWithContext creates a new ListEnvironmentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListEnvironmentsParamsWithContext(ctx context.Context) *ListEnvironmentsParams {
	var (
		maxItemsDefault       = int64(100)
		offsetDefault         = int64(0)
		orderByDefault        = string("created_at")
		orderDirectionDefault = string("desc")
	)
	return &ListEnvironmentsParams{
		MaxItems:       &maxItemsDefault,
		Offset:         &offsetDefault,
		OrderBy:        &orderByDefault,
		OrderDirection: &orderDirectionDefault,

		Context: ctx,
	}
}

// NewListEnvironmentsParamsWithHTTPClient creates a new ListEnvironmentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListEnvironmentsParamsWithHTTPClient(client *http.Client) *ListEnvironmentsParams {
	var (
		maxItemsDefault       = int64(100)
		offsetDefault         = int64(0)
		orderByDefault        = string("created_at")
		orderDirectionDefault = string("desc")
	)
	return &ListEnvironmentsParams{
		MaxItems:       &maxItemsDefault,
		Offset:         &offsetDefault,
		OrderBy:        &orderByDefault,
		OrderDirection: &orderDirectionDefault,
		HTTPClient:     client,
	}
}

/*ListEnvironmentsParams contains all the parameters to send to the API endpoint
for the list environments operation typically these are written to a http.Request
*/
type ListEnvironmentsParams struct {

	/*MaxItems
	  Maximum number of items to return.

	*/
	MaxItems *int64
	/*Offset
	  Number of items to skip before returning. This parameter is used when the number of items spans multiple pages.

	*/
	Offset *int64
	/*OrderBy
	  Field to sort the items by.

	*/
	OrderBy *string
	/*OrderDirection
	  Direction to sort the items in.

	*/
	OrderDirection *string
	/*Query
	  A stringified JSON array of search parameters.

	*/
	Query *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list environments params
func (o *ListEnvironmentsParams) WithTimeout(timeout time.Duration) *ListEnvironmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list environments params
func (o *ListEnvironmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list environments params
func (o *ListEnvironmentsParams) WithContext(ctx context.Context) *ListEnvironmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list environments params
func (o *ListEnvironmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list environments params
func (o *ListEnvironmentsParams) WithHTTPClient(client *http.Client) *ListEnvironmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list environments params
func (o *ListEnvironmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMaxItems adds the maxItems to the list environments params
func (o *ListEnvironmentsParams) WithMaxItems(maxItems *int64) *ListEnvironmentsParams {
	o.SetMaxItems(maxItems)
	return o
}

// SetMaxItems adds the maxItems to the list environments params
func (o *ListEnvironmentsParams) SetMaxItems(maxItems *int64) {
	o.MaxItems = maxItems
}

// WithOffset adds the offset to the list environments params
func (o *ListEnvironmentsParams) WithOffset(offset *int64) *ListEnvironmentsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the list environments params
func (o *ListEnvironmentsParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOrderBy adds the orderBy to the list environments params
func (o *ListEnvironmentsParams) WithOrderBy(orderBy *string) *ListEnvironmentsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the list environments params
func (o *ListEnvironmentsParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithOrderDirection adds the orderDirection to the list environments params
func (o *ListEnvironmentsParams) WithOrderDirection(orderDirection *string) *ListEnvironmentsParams {
	o.SetOrderDirection(orderDirection)
	return o
}

// SetOrderDirection adds the orderDirection to the list environments params
func (o *ListEnvironmentsParams) SetOrderDirection(orderDirection *string) {
	o.OrderDirection = orderDirection
}

// WithQuery adds the query to the list environments params
func (o *ListEnvironmentsParams) WithQuery(query *string) *ListEnvironmentsParams {
	o.SetQuery(query)
	return o
}

// SetQuery adds the query to the list environments params
func (o *ListEnvironmentsParams) SetQuery(query *string) {
	o.Query = query
}

// WriteToRequest writes these params to a swagger request
func (o *ListEnvironmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MaxItems != nil {

		// query param max_items
		var qrMaxItems int64
		if o.MaxItems != nil {
			qrMaxItems = *o.MaxItems
		}
		qMaxItems := swag.FormatInt64(qrMaxItems)
		if qMaxItems != "" {
			if err := r.SetQueryParam("max_items", qMaxItems); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.OrderDirection != nil {

		// query param order_direction
		var qrOrderDirection string
		if o.OrderDirection != nil {
			qrOrderDirection = *o.OrderDirection
		}
		qOrderDirection := qrOrderDirection
		if qOrderDirection != "" {
			if err := r.SetQueryParam("order_direction", qOrderDirection); err != nil {
				return err
			}
		}

	}

	if o.Query != nil {

		// query param query
		var qrQuery string
		if o.Query != nil {
			qrQuery = *o.Query
		}
		qQuery := qrQuery
		if qQuery != "" {
			if err := r.SetQueryParam("query", qQuery); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
