// Code generated by go-swagger; DO NOT EDIT.

package families

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/v2/pkg/swagger/models"
)

// CreateFamilyReader is a Reader for the CreateFamily structure.
type CreateFamilyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFamilyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateFamilyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateFamilyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateFamilyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateFamilyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateFamilyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateFamilyCreated creates a CreateFamilyCreated with default headers values
func NewCreateFamilyCreated() *CreateFamilyCreated {
	return &CreateFamilyCreated{}
}

/*CreateFamilyCreated handles this case with default header values.

The newly-created custom compliance family.
*/
type CreateFamilyCreated struct {
	Payload *models.FamilyWithRules
}

func (o *CreateFamilyCreated) Error() string {
	return fmt.Sprintf("[POST /families][%d] createFamilyCreated  %+v", 201, o.Payload)
}

func (o *CreateFamilyCreated) GetPayload() *models.FamilyWithRules {
	return o.Payload
}

func (o *CreateFamilyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FamilyWithRules)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFamilyBadRequest creates a CreateFamilyBadRequest with default headers values
func NewCreateFamilyBadRequest() *CreateFamilyBadRequest {
	return &CreateFamilyBadRequest{}
}

/*CreateFamilyBadRequest handles this case with default header values.

BadRequestError
*/
type CreateFamilyBadRequest struct {
	Payload *models.BadRequestError
}

func (o *CreateFamilyBadRequest) Error() string {
	return fmt.Sprintf("[POST /families][%d] createFamilyBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFamilyBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *CreateFamilyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFamilyUnauthorized creates a CreateFamilyUnauthorized with default headers values
func NewCreateFamilyUnauthorized() *CreateFamilyUnauthorized {
	return &CreateFamilyUnauthorized{}
}

/*CreateFamilyUnauthorized handles this case with default header values.

AuthenticationError
*/
type CreateFamilyUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *CreateFamilyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /families][%d] createFamilyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateFamilyUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *CreateFamilyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFamilyForbidden creates a CreateFamilyForbidden with default headers values
func NewCreateFamilyForbidden() *CreateFamilyForbidden {
	return &CreateFamilyForbidden{}
}

/*CreateFamilyForbidden handles this case with default header values.

AuthorizationError
*/
type CreateFamilyForbidden struct {
	Payload *models.AuthorizationError
}

func (o *CreateFamilyForbidden) Error() string {
	return fmt.Sprintf("[POST /families][%d] createFamilyForbidden  %+v", 403, o.Payload)
}

func (o *CreateFamilyForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *CreateFamilyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFamilyInternalServerError creates a CreateFamilyInternalServerError with default headers values
func NewCreateFamilyInternalServerError() *CreateFamilyInternalServerError {
	return &CreateFamilyInternalServerError{}
}

/*CreateFamilyInternalServerError handles this case with default header values.

InternalServerError
*/
type CreateFamilyInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *CreateFamilyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /families][%d] createFamilyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateFamilyInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *CreateFamilyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
