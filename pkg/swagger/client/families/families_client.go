// Code generated by go-swagger; DO NOT EDIT.

package families

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new families API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for families API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateFamily(params *CreateFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*CreateFamilyCreated, error)

	DeleteFamily(params *DeleteFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteFamilyNoContent, error)

	GetFamily(params *GetFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*GetFamilyOK, error)

	ListFamilies(params *ListFamiliesParams, authInfo runtime.ClientAuthInfoWriter) (*ListFamiliesOK, error)

	UpdateFamily(params *UpdateFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateFamilyOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateFamily creates a new custom compliance family

  Create a new custom compliance family.

*/
func (a *Client) CreateFamily(params *CreateFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*CreateFamilyCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateFamilyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createFamily",
		Method:             "POST",
		PathPattern:        "/families",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateFamilyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateFamilyCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createFamily: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteFamily deletes a family

  Delete a Family.

*/
func (a *Client) DeleteFamily(params *DeleteFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteFamilyNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteFamilyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteFamily",
		Method:             "DELETE",
		PathPattern:        "/families/{family_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteFamilyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteFamilyNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteFamily: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFamily looks up family

  Return a specific Family.
*/
func (a *Client) GetFamily(params *GetFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*GetFamilyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFamilyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getFamily",
		Method:             "GET",
		PathPattern:        "/families/{family_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFamilyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFamilyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getFamily: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListFamilies lists compliance families

  Return a list of compliance families.

*/
func (a *Client) ListFamilies(params *ListFamiliesParams, authInfo runtime.ClientAuthInfoWriter) (*ListFamiliesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListFamiliesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listFamilies",
		Method:             "GET",
		PathPattern:        "/families",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListFamiliesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListFamiliesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listFamilies: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateFamily edits an existing user family

  Edit an existing user Family.

*/
func (a *Client) UpdateFamily(params *UpdateFamilyParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateFamilyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateFamilyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateFamily",
		Method:             "PATCH",
		PathPattern:        "/families/{family_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateFamilyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateFamilyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateFamily: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
