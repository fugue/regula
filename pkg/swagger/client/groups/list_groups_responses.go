// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// ListGroupsReader is a Reader for the ListGroups structure.
type ListGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListGroupsOK creates a ListGroupsOK with default headers values
func NewListGroupsOK() *ListGroupsOK {
	return &ListGroupsOK{}
}

/*ListGroupsOK handles this case with default header values.

List of Groups.
*/
type ListGroupsOK struct {
	Payload *models.Groups
}

func (o *ListGroupsOK) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsOK  %+v", 200, o.Payload)
}

func (o *ListGroupsOK) GetPayload() *models.Groups {
	return o.Payload
}

func (o *ListGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Groups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGroupsBadRequest creates a ListGroupsBadRequest with default headers values
func NewListGroupsBadRequest() *ListGroupsBadRequest {
	return &ListGroupsBadRequest{}
}

/*ListGroupsBadRequest handles this case with default header values.

BadRequestError
*/
type ListGroupsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *ListGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *ListGroupsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *ListGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGroupsUnauthorized creates a ListGroupsUnauthorized with default headers values
func NewListGroupsUnauthorized() *ListGroupsUnauthorized {
	return &ListGroupsUnauthorized{}
}

/*ListGroupsUnauthorized handles this case with default header values.

AuthenticationError
*/
type ListGroupsUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *ListGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListGroupsUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *ListGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGroupsForbidden creates a ListGroupsForbidden with default headers values
func NewListGroupsForbidden() *ListGroupsForbidden {
	return &ListGroupsForbidden{}
}

/*ListGroupsForbidden handles this case with default header values.

AuthorizationError
*/
type ListGroupsForbidden struct {
	Payload *models.AuthorizationError
}

func (o *ListGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsForbidden  %+v", 403, o.Payload)
}

func (o *ListGroupsForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *ListGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGroupsInternalServerError creates a ListGroupsInternalServerError with default headers values
func NewListGroupsInternalServerError() *ListGroupsInternalServerError {
	return &ListGroupsInternalServerError{}
}

/*ListGroupsInternalServerError handles this case with default header values.

InternalServerError
*/
type ListGroupsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *ListGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListGroupsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *ListGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
