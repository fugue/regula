// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// CreateNotificationReader is a Reader for the CreateNotification structure.
type CreateNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateNotificationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNotificationCreated creates a CreateNotificationCreated with default headers values
func NewCreateNotificationCreated() *CreateNotificationCreated {
	return &CreateNotificationCreated{}
}

/*CreateNotificationCreated handles this case with default header values.

New notification details.
*/
type CreateNotificationCreated struct {
	Payload *models.Notification
}

func (o *CreateNotificationCreated) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationCreated  %+v", 201, o.Payload)
}

func (o *CreateNotificationCreated) GetPayload() *models.Notification {
	return o.Payload
}

func (o *CreateNotificationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Notification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotificationBadRequest creates a CreateNotificationBadRequest with default headers values
func NewCreateNotificationBadRequest() *CreateNotificationBadRequest {
	return &CreateNotificationBadRequest{}
}

/*CreateNotificationBadRequest handles this case with default header values.

BadRequestError
*/
type CreateNotificationBadRequest struct {
	Payload *models.BadRequestError
}

func (o *CreateNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNotificationBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *CreateNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotificationUnauthorized creates a CreateNotificationUnauthorized with default headers values
func NewCreateNotificationUnauthorized() *CreateNotificationUnauthorized {
	return &CreateNotificationUnauthorized{}
}

/*CreateNotificationUnauthorized handles this case with default header values.

AuthenticationError
*/
type CreateNotificationUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *CreateNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateNotificationUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *CreateNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotificationForbidden creates a CreateNotificationForbidden with default headers values
func NewCreateNotificationForbidden() *CreateNotificationForbidden {
	return &CreateNotificationForbidden{}
}

/*CreateNotificationForbidden handles this case with default header values.

AuthorizationError
*/
type CreateNotificationForbidden struct {
	Payload *models.AuthorizationError
}

func (o *CreateNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationForbidden  %+v", 403, o.Payload)
}

func (o *CreateNotificationForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *CreateNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotificationNotFound creates a CreateNotificationNotFound with default headers values
func NewCreateNotificationNotFound() *CreateNotificationNotFound {
	return &CreateNotificationNotFound{}
}

/*CreateNotificationNotFound handles this case with default header values.

NotFoundError
*/
type CreateNotificationNotFound struct {
	Payload *models.NotFoundError
}

func (o *CreateNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationNotFound  %+v", 404, o.Payload)
}

func (o *CreateNotificationNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *CreateNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNotificationInternalServerError creates a CreateNotificationInternalServerError with default headers values
func NewCreateNotificationInternalServerError() *CreateNotificationInternalServerError {
	return &CreateNotificationInternalServerError{}
}

/*CreateNotificationInternalServerError handles this case with default header values.

InternalServerError
*/
type CreateNotificationInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *CreateNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /notifications][%d] createNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateNotificationInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *CreateNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
