// Code generated by go-swagger; DO NOT EDIT.

package scans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// GetComplianceByRulesReader is a Reader for the GetComplianceByRules structure.
type GetComplianceByRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComplianceByRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComplianceByRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetComplianceByRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetComplianceByRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComplianceByRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComplianceByRulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetComplianceByRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetComplianceByRulesOK creates a GetComplianceByRulesOK with default headers values
func NewGetComplianceByRulesOK() *GetComplianceByRulesOK {
	return &GetComplianceByRulesOK{}
}

/*GetComplianceByRulesOK handles this case with default header values.

List of compliance results from a scan grouped by rule.
*/
type GetComplianceByRulesOK struct {
	Payload *models.ComplianceByRules
}

func (o *GetComplianceByRulesOK) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesOK  %+v", 200, o.Payload)
}

func (o *GetComplianceByRulesOK) GetPayload() *models.ComplianceByRules {
	return o.Payload
}

func (o *GetComplianceByRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComplianceByRules)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComplianceByRulesBadRequest creates a GetComplianceByRulesBadRequest with default headers values
func NewGetComplianceByRulesBadRequest() *GetComplianceByRulesBadRequest {
	return &GetComplianceByRulesBadRequest{}
}

/*GetComplianceByRulesBadRequest handles this case with default header values.

BadRequestError
*/
type GetComplianceByRulesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetComplianceByRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetComplianceByRulesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetComplianceByRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComplianceByRulesUnauthorized creates a GetComplianceByRulesUnauthorized with default headers values
func NewGetComplianceByRulesUnauthorized() *GetComplianceByRulesUnauthorized {
	return &GetComplianceByRulesUnauthorized{}
}

/*GetComplianceByRulesUnauthorized handles this case with default header values.

AuthenticationError
*/
type GetComplianceByRulesUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *GetComplianceByRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetComplianceByRulesUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *GetComplianceByRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComplianceByRulesForbidden creates a GetComplianceByRulesForbidden with default headers values
func NewGetComplianceByRulesForbidden() *GetComplianceByRulesForbidden {
	return &GetComplianceByRulesForbidden{}
}

/*GetComplianceByRulesForbidden handles this case with default header values.

AuthorizationError
*/
type GetComplianceByRulesForbidden struct {
	Payload *models.AuthorizationError
}

func (o *GetComplianceByRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesForbidden  %+v", 403, o.Payload)
}

func (o *GetComplianceByRulesForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *GetComplianceByRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComplianceByRulesNotFound creates a GetComplianceByRulesNotFound with default headers values
func NewGetComplianceByRulesNotFound() *GetComplianceByRulesNotFound {
	return &GetComplianceByRulesNotFound{}
}

/*GetComplianceByRulesNotFound handles this case with default header values.

NotFoundError
*/
type GetComplianceByRulesNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetComplianceByRulesNotFound) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesNotFound  %+v", 404, o.Payload)
}

func (o *GetComplianceByRulesNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetComplianceByRulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComplianceByRulesInternalServerError creates a GetComplianceByRulesInternalServerError with default headers values
func NewGetComplianceByRulesInternalServerError() *GetComplianceByRulesInternalServerError {
	return &GetComplianceByRulesInternalServerError{}
}

/*GetComplianceByRulesInternalServerError handles this case with default header values.

InternalServerError
*/
type GetComplianceByRulesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetComplianceByRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scans/{scan_id}/compliance_by_rules][%d] getComplianceByRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetComplianceByRulesInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetComplianceByRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
