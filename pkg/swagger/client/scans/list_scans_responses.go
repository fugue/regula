// Code generated by go-swagger; DO NOT EDIT.

package scans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fugue/regula/pkg/swagger/models"
)

// ListScansReader is a Reader for the ListScans structure.
type ListScansReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListScansReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListScansOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListScansBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListScansUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListScansForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListScansInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListScansOK creates a ListScansOK with default headers values
func NewListScansOK() *ListScansOK {
	return &ListScansOK{}
}

/*ListScansOK handles this case with default header values.

List of scans.
*/
type ListScansOK struct {
	Payload *models.Scans
}

func (o *ListScansOK) Error() string {
	return fmt.Sprintf("[GET /scans][%d] listScansOK  %+v", 200, o.Payload)
}

func (o *ListScansOK) GetPayload() *models.Scans {
	return o.Payload
}

func (o *ListScansOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Scans)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScansBadRequest creates a ListScansBadRequest with default headers values
func NewListScansBadRequest() *ListScansBadRequest {
	return &ListScansBadRequest{}
}

/*ListScansBadRequest handles this case with default header values.

BadRequestError
*/
type ListScansBadRequest struct {
	Payload *models.BadRequestError
}

func (o *ListScansBadRequest) Error() string {
	return fmt.Sprintf("[GET /scans][%d] listScansBadRequest  %+v", 400, o.Payload)
}

func (o *ListScansBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *ListScansBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScansUnauthorized creates a ListScansUnauthorized with default headers values
func NewListScansUnauthorized() *ListScansUnauthorized {
	return &ListScansUnauthorized{}
}

/*ListScansUnauthorized handles this case with default header values.

AuthenticationError
*/
type ListScansUnauthorized struct {
	Payload *models.AuthenticationError
}

func (o *ListScansUnauthorized) Error() string {
	return fmt.Sprintf("[GET /scans][%d] listScansUnauthorized  %+v", 401, o.Payload)
}

func (o *ListScansUnauthorized) GetPayload() *models.AuthenticationError {
	return o.Payload
}

func (o *ListScansUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScansForbidden creates a ListScansForbidden with default headers values
func NewListScansForbidden() *ListScansForbidden {
	return &ListScansForbidden{}
}

/*ListScansForbidden handles this case with default header values.

AuthorizationError
*/
type ListScansForbidden struct {
	Payload *models.AuthorizationError
}

func (o *ListScansForbidden) Error() string {
	return fmt.Sprintf("[GET /scans][%d] listScansForbidden  %+v", 403, o.Payload)
}

func (o *ListScansForbidden) GetPayload() *models.AuthorizationError {
	return o.Payload
}

func (o *ListScansForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScansInternalServerError creates a ListScansInternalServerError with default headers values
func NewListScansInternalServerError() *ListScansInternalServerError {
	return &ListScansInternalServerError{}
}

/*ListScansInternalServerError handles this case with default header values.

InternalServerError
*/
type ListScansInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *ListScansInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scans][%d] listScansInternalServerError  %+v", 500, o.Payload)
}

func (o *ListScansInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *ListScansInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
