// Code generated by go-swagger; DO NOT EDIT.

package scans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUploadRegulaScanViewParams creates a new UploadRegulaScanViewParams object
// with the default values initialized.
func NewUploadRegulaScanViewParams() *UploadRegulaScanViewParams {
	var ()
	return &UploadRegulaScanViewParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUploadRegulaScanViewParamsWithTimeout creates a new UploadRegulaScanViewParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUploadRegulaScanViewParamsWithTimeout(timeout time.Duration) *UploadRegulaScanViewParams {
	var ()
	return &UploadRegulaScanViewParams{

		timeout: timeout,
	}
}

// NewUploadRegulaScanViewParamsWithContext creates a new UploadRegulaScanViewParams object
// with the default values initialized, and the ability to set a context for a request
func NewUploadRegulaScanViewParamsWithContext(ctx context.Context) *UploadRegulaScanViewParams {
	var ()
	return &UploadRegulaScanViewParams{

		Context: ctx,
	}
}

// NewUploadRegulaScanViewParamsWithHTTPClient creates a new UploadRegulaScanViewParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUploadRegulaScanViewParamsWithHTTPClient(client *http.Client) *UploadRegulaScanViewParams {
	var ()
	return &UploadRegulaScanViewParams{
		HTTPClient: client,
	}
}

/*UploadRegulaScanViewParams contains all the parameters to send to the API endpoint
for the upload regula scan view operation typically these are written to a http.Request
*/
type UploadRegulaScanViewParams struct {

	/*ScanID
	  The ID of the started scan

	*/
	ScanID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the upload regula scan view params
func (o *UploadRegulaScanViewParams) WithTimeout(timeout time.Duration) *UploadRegulaScanViewParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload regula scan view params
func (o *UploadRegulaScanViewParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload regula scan view params
func (o *UploadRegulaScanViewParams) WithContext(ctx context.Context) *UploadRegulaScanViewParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload regula scan view params
func (o *UploadRegulaScanViewParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload regula scan view params
func (o *UploadRegulaScanViewParams) WithHTTPClient(client *http.Client) *UploadRegulaScanViewParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload regula scan view params
func (o *UploadRegulaScanViewParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScanID adds the scanID to the upload regula scan view params
func (o *UploadRegulaScanViewParams) WithScanID(scanID string) *UploadRegulaScanViewParams {
	o.SetScanID(scanID)
	return o
}

// SetScanID adds the scanId to the upload regula scan view params
func (o *UploadRegulaScanViewParams) SetScanID(scanID string) {
	o.ScanID = scanID
}

// WriteToRequest writes these params to a swagger request
func (o *UploadRegulaScanViewParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param scan_id
	if err := r.SetPathParam("scan_id", o.ScanID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
