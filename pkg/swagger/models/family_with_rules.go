// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FamilyWithRules A family with rule IDs
//
// swagger:model FamilyWithRules
type FamilyWithRules struct {

	// If the family will automatically be enabled on all environments within the tenant
	AlwaysEnabled bool `json:"always_enabled,omitempty"`

	// The date and time the rule was created.
	CreatedAt int64 `json:"created_at,omitempty"`

	// Principal that created the rule.
	CreatedBy string `json:"created_by,omitempty"`

	// Display name of the user that created the rule
	CreatedByDisplayName string `json:"created_by_display_name,omitempty"`

	// Description of the family
	Description string `json:"description,omitempty"`

	// ID of the family
	ID string `json:"id,omitempty"`

	// Human readable name of the family
	Name string `json:"name,omitempty"`

	// Provider the families applies to
	Providers []string `json:"providers"`

	// If the family is recommended for all new environments
	Recommended bool `json:"recommended,omitempty"`

	// List of rule ids associated with family
	RuleIds []string `json:"rule_ids"`

	// The origin of this family
	// Enum: [FUGUE CUSTOM]
	Source string `json:"source,omitempty"`

	// ID of the tenant
	TenantID string `json:"tenant_id,omitempty"`

	// The date and time the rule was last updated.
	UpdatedAt int64 `json:"updated_at,omitempty"`

	// Principal that last updated the rule.
	UpdatedBy string `json:"updated_by,omitempty"`

	// Display name of the user that last updated the rule
	UpdatedByDisplayName string `json:"updated_by_display_name,omitempty"`
}

// Validate validates this family with rules
func (m *FamilyWithRules) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var familyWithRulesTypeSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FUGUE","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		familyWithRulesTypeSourcePropEnum = append(familyWithRulesTypeSourcePropEnum, v)
	}
}

const (

	// FamilyWithRulesSourceFUGUE captures enum value "FUGUE"
	FamilyWithRulesSourceFUGUE string = "FUGUE"

	// FamilyWithRulesSourceCUSTOM captures enum value "CUSTOM"
	FamilyWithRulesSourceCUSTOM string = "CUSTOM"
)

// prop value enum
func (m *FamilyWithRules) validateSourceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, familyWithRulesTypeSourcePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FamilyWithRules) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(m.Source) { // not required
		return nil
	}

	// value enum
	if err := m.validateSourceEnum("source", "body", m.Source); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FamilyWithRules) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FamilyWithRules) UnmarshalBinary(b []byte) error {
	var res FamilyWithRules
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
