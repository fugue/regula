// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProviderOptions Provider options.
//
// swagger:model ProviderOptions
type ProviderOptions struct {

	// aws
	Aws *ProviderOptionsAws `json:"aws,omitempty"`

	// aws govcloud
	AwsGovcloud *ProviderOptionsAws `json:"aws_govcloud,omitempty"`

	// azure
	Azure *ProviderOptionsAzure `json:"azure,omitempty"`

	// google
	Google *ProviderOptionsGoogle `json:"google,omitempty"`
}

// Validate validates this provider options
func (m *ProviderOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAws(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAwsGovcloud(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAzure(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGoogle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProviderOptions) validateAws(formats strfmt.Registry) error {

	if swag.IsZero(m.Aws) { // not required
		return nil
	}

	if m.Aws != nil {
		if err := m.Aws.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("aws")
			}
			return err
		}
	}

	return nil
}

func (m *ProviderOptions) validateAwsGovcloud(formats strfmt.Registry) error {

	if swag.IsZero(m.AwsGovcloud) { // not required
		return nil
	}

	if m.AwsGovcloud != nil {
		if err := m.AwsGovcloud.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("aws_govcloud")
			}
			return err
		}
	}

	return nil
}

func (m *ProviderOptions) validateAzure(formats strfmt.Registry) error {

	if swag.IsZero(m.Azure) { // not required
		return nil
	}

	if m.Azure != nil {
		if err := m.Azure.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("azure")
			}
			return err
		}
	}

	return nil
}

func (m *ProviderOptions) validateGoogle(formats strfmt.Registry) error {

	if swag.IsZero(m.Google) { // not required
		return nil
	}

	if m.Google != nil {
		if err := m.Google.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("google")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProviderOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProviderOptions) UnmarshalBinary(b []byte) error {
	var res ProviderOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
